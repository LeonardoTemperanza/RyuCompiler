
// When importing modules is implemented, there will be
// a "cstd.ryu" file that will include the c standard library
proc malloc(uint64 size)->^raw;
proc putchar(int c)->int c;

proc main()->int
{
    LinkedList ll;
    // Initting a linked list with InitLinkedList triggers a bug in Tilde Backend.
    ll.first = ll.last = 0;
    AddNode(&ll, 97);
    AddNode(&ll, 98);
    AddNode(&ll, 99);
    AddNode(&ll, 100);
    AddNode(&ll, 101);
    
    PrintLinkedList(ll);
    
    return 0;
}

struct LinkedList
{
    ^Node first;
    ^Node last;
}

struct Node
{
    ^Node next;
    int64 a;
    int64 b;
    int64 id;
}

proc InitLinkedList()->LinkedList
{
    LinkedList ll;
    ll.first = 0;
    ll.last = 0;
    return ll;
}

proc AddNode(^LinkedList ll, int16 id)
{
    ^Node newNode = cast(^Node) malloc(100);
    newNode.id = id;
    newNode.next = 0;
    
    if(ll.first == 0)
    {
        ll.first = newNode;
        ll.last = newNode;
        return;
    }
    
    ll.last.next = newNode;
    ll.last = newNode;
}

proc PrintLinkedList(LinkedList list)
{
    for(^Node n = list.first; n; n = n.next)
    {
        putchar(n.id);
    }
}
